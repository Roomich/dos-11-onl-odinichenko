---------------------------HW9----------------------------------

1. Создать скрипт, который делает бэкап (архив) папки и перемещает ее в заданную папку с бэкапами, также скрипт должен проверять, сколько в папке бэкапов уже имеется и, если превышает порог, удалить самый старый. Параметры:
о Имя папки/файла которую бэкапить
о Папка, куда помещаться бэкап
о Порог количества бэкапов
2. Создать скрипт, который выведет время выполнения команды "find / -name test -type f"
3. Написать скрипт, который выведет:
о Точное количество выполняемых процессов в системе (доступных под текущим пользователем)
о Загрузка CPU в %
о Объем доступной оперативной памяти (в байтах или МБ)
о Количество установленных соединений по произвольному порту (например, 80, 22, 443) на вашем компьютере (т.е. «кто подключился к вам»). Порт задается параметром пуска. Если входной параметр отсутствует - вывести все порты
• Общий суммарный объем всех дисковых устройств, установленных в текущий
момент на компьютере (байты, КБ или Гб).
4. Написать скрипт, который генерирует дерево из директорий и файлов.
Каждая директория должна содержать минимум 1 файл. Количество файлов и папок внутри директорий рандомно. В каждой генерируемой папке должен быть мин один файл. Принимаемые параметры:
о Имя папки, в которой производить генерацию
о Глубина генерации (Пример: 1 == создается одна директория, 2 == 1 родительская директория и минимум 1 внутри нее)
Рандом <10
• Упрощенный вариант: количество вложенных файлов и папок = 1, должны соблюдаться глубина и имя папки, в которой производить генерацию

BashScripts/
Create_baskup.sh
Time_execute.sh
Minoring.sh
File_generator.sh

https://proghub.ru/t/bash-for-beginner - тест


---------------------------HW10----------------------------------

https://www.atlassian.com/continuous-delivery/continuous-integration

1.Найти и посчитать количество словосочетаний “continuous integration” 1-3 разными способами 
2.Заменить все “continuous integration” на абревиатуру  
